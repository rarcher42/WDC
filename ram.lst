
; 64tass Turbo Assembler Macro V1.59.3120 listing file
; 64tass -c -L ram.lst --s-record -o ram.hex ram.asm
; Wed Jul 17 17:26:21 2024

;Offset	;Hex		;Monitor	;Source

;******  Processing input file: ram.asm


;******  Processing file: via_symbols.inc

=$7fe0					SYS_VIA_BASE	    = 	$7FE0
=32736					SYSTEM_VIA_IORB     =  	SYS_VIA_BASE+0	; Port B IO register
=32737					SYSTEM_VIA_IORA     =	SYS_VIA_BASE+1 	; Port A IO register
=32738					SYSTEM_VIA_DDRB     = 	SYS_VIA_BASE+2	; Port B data direction register
=32739					SYSTEM_VIA_DDRA     = 	SYS_VIA_BASE+3	; Port A data direction register
=32740					SYSTEM_VIA_T1C_L    =	SYS_VIA_BASE+4 	; Timer 1 counter/latches, low-order
=32741					SYSTEM_VIA_T1C_H    = 	SYS_VIA_BASE+5	; Timer 1 high-order counter
=32742					SYSTEM_VIA_T1L_L    = 	SYS_VIA_BASE+6	; Timer 1 low-order latches
=32743					SYSTEM_VIA_T1L_H    = 	SYS_VIA_BASE+7	; Timer 1 high-order latches
=32744					SYSTEM_VIA_T2C_L    = 	SYS_VIA_BASE+8	; Timer 2 counter/latches, lower-order
=32745					SYSTEM_VIA_T2C_H    = 	SYS_VIA_BASE+9	; Timer 2 high-order counter
=32746					SYSTEM_VIA_SR       = 	SYS_VIA_BASE+10	; Shift register
=32747					SYSTEM_VIA_ACR      = 	SYS_VIA_BASE+11	; Auxilliary control register
=32748					SYSTEM_VIA_PCR      =	SYS_VIA_BASE+12	; Peripheral control register
=32749					SYSTEM_VIA_IFR	    =	SYS_VIA_BASE+13 ; Interrupt flag register
=32750					SYSTEM_VIA_IER      = 	SYS_VIA_BASE+14	; Interrupt enable register
=32751					SYSTEM_VIA_ORA_IRA  =	SYS_VIA_BASE+15	; Port A IO register, but no handshake
=$7fc0					DEBUG_VIA_BASE	    = 	$7FC0
=32704					DEBUG_VIA_IORB     =  	DEBUG_VIA_BASE+0	; Port B IO register
=32705					DEBUG_VIA_IORA     =	DEBUG_VIA_BASE+1 	; Port A IO register
=32706					DEBUG_VIA_DDRB     = 	DEBUG_VIA_BASE+2	; Port B data direction register
=32707					DEBUG_VIA_DDRA     = 	DEBUG_VIA_BASE+3	; Port A data direction register
=32708					DEBUG_VIA_T1C_L    =	DEBUG_VIA_BASE+4 	; Timer 1 counter/latches, low-order
=32709					DEBUG_VIA_T1C_H    = 	DEBUG_VIA_BASE+5	; Timer 1 high-order counter
=32710					DEBUG_VIA_T1L_L    = 	DEBUG_VIA_BASE+6	; Timer 1 low-order latches
=32711					DEBUG_VIA_T1L_H    = 	DEBUG_VIA_BASE+7	; Timer 1 high-order latches
=32712					DEBUG_VIA_T2C_L    = 	DEBUG_VIA_BASE+8	; Timer 2 counter/latches, lower-order
=32713					DEBUG_VIA_T2C_H    = 	DEBUG_VIA_BASE+9	; Timer 2 high-order counter
=32714					DEBUG_VIA_SR       = 	DEBUG_VIA_BASE+10	; Shift register
=32715					DEBUG_VIA_ACR      = 	DEBUG_VIA_BASE+11	; Auxilliary control register
=32716					DEBUG_VIA_PCR      =	DEBUG_VIA_BASE+12	; Peripheral control register
=32717					DEBUG_VIA_IFR	    =	DEBUG_VIA_BASE+13 ; Interrupt flag register
=32718					DEBUG_VIA_IER      = 	DEBUG_VIA_BASE+14	; Interrupt enable register
=32719					DEBUG_VIA_ORA_IRA  =	DEBUG_VIA_BASE+15	; Port A IO register, but no handshake
=$01					PB0 = MASK0
=$02					PB1 = MASK1
=$04					PB2 = MASK2
=$08					PB3 = MASK3
=$10					PB4 = MASK4
=$20					PB5 = MASK5
=$40					PB6 = MASK6
=$80					PB7 = MASK7
=$01					PA0 = MASK0
=$02					PA1 = MASK1
=$04					PA2 = MASK2
=$08					PA3 = MASK3
=$10					PA4 = MASK4
=$20					PA5 = MASK5
=$40					PA6 = MASK6
=$80					PA7 = MASK7

;******  Return to file: ram.asm


;******  Processing file: acia_symbols.inc

=$7f80					ACIA_BASE = $7F80		; This is where the 6551 ACIA starts
=$7f80					ACIA_SDR = ACIA_BASE       		; RX'ed bytes read, TX bytes written, here
=32641					ACIA_SSR = ACIA_BASE+1     		; Serial data status register
=32642					ACIA_SCMD = ACIA_BASE+2     		; Serial command reg. ()
=32643					ACIA_SCTL = ACIA_BASE+3     		; Serial control reg. ()
=$10					TX_RDY = MASK4
=$08					RX_RDY = MASK3

;******  Return to file: ram.asm

=3					CTRL_C	= 3
=10					LF		= 10
=13					CR		= 13
=32					SP		= 32
=$01					MASK0		= %00000001
=$02					MASK1		= %00000010
=$04					MASK2		= %00000100
=$08					MASK3		= %00001000
=$10					MASK4		= %00010000
=$20					MASK5		= %00100000
=$40					MASK6 		= %01000000
=$80					MASK7		= %10000000
=$80					N_FLAG		= MASK7
=$40					V_FLAG		= MASK6
=$20					M_FLAG		= MASK5
=$10					X_FLAG		= MASK4
=$08					D_FLAG		= MASK3
=$04					I_FLAG		= MASK2
=$02					Z_FLAG		= MASK1
=$01					C_FLAG		= MASK0
>0080					TEMP2		.byte	?
=$07eff					STACKTOP    = $07EFF
.2000					START
.2000	78		sei					SEI
.2001	18		clc					CLC
.2002	fb		xce					XCE
.2003	c2 18		rep #$18				REP	#(X_FLAG | D_FLAG)
.2005	e2 20		sep #$20				SEP	#M_FLAG
.2007	a2 ff 7e	ldx #$7eff				LDX	#STACKTOP
.200a	9a		txs					TXS
.200b	20 2b 20	jsr $202b				JSR	INIT_SER
.200e	a0 82 20	ldy #$2082				LDY	#MSG_FOXRAM
.2011	20 1f 20	jsr $201f				JSR	PUT_STR
.2014					POINTLESS
.2014	20 56 20	jsr $2056				JSR	GET_SER
.2017	c9 03		cmp #$03				CMP	#CTRL_C
.2019	d0 e5		bne $2000				BNE	START
.201b	5c 00 f8 00	jml $00f800				JML 	$00F800
.201f					PUT_STR
.201f	b9 00 00	lda $0000,y				LDA	0,Y				; Y points directly to string
.2022	f0 06		beq $202a				BEQ	PUTSX
.2024	20 50 20	jsr $2050				JSR	PUT_SER
.2027	c8		iny					INY					; point to next character
.2028	80 f5		bra $201f				BRA	PUT_STR
.202a					PUTSX
.202a	60		rts					RTS
=9167					INTER_CHAR_DLY = 9167	; 8E6 cycles/sec * 11 bits/byte * 1 sec/ 9600 bits = 9167 cycles/byte
=$1e					SCTL_V  = %00011110       	; 9600 baud, 8 bits, 1 stop bit, rxclock = txclock
=$0b					SCMD_V  = %00001011       	; No parity, no echo, no tx or rx IRQ (for now), DTR*
.202b					INIT_SER
.202b	a9 1e		lda #$1e				LDA     #SCTL_V 		; 9600,n,8,1.  rxclock = txclock
.202d	8d 83 7f	sta $7f83				STA 	ACIA_SCTL
.2030	a9 0b		lda #$0b				LDA     #SCMD_V 		; No parity, no echo, no tx or rx IRQ (for now), DTR*
.2032	8d 82 7f	sta $7f82				STA     ACIA_SCMD
.2035	a9 80		lda #$80				LDA     #$80			; Disable all VIA interrupts (not that CPU cares as yet if IRQB=0)
.2037	8d ee 7f	sta $7fee	                	STA     SYSTEM_VIA_IER
.203a	a9 20		lda #$20				LDA	#%00100000		; Put TIMER2 in timed mode
.203c	1c eb 7f	trb $7feb				TRB	SYSTEM_VIA_ACR
.203f	20 43 20	jsr $2043	               		JSR	SET_SERTMR          	; Delay initial char output one character time in case TX not empty
.2042	60		rts					RTS
.2043					SET_SERTMR
.2043	48		pha					PHA
.2044	a9 cf		lda #$cf				LDA     #<INTER_CHAR_DLY	; Load VIA T2 counter with
.2046	8d e8 7f	sta $7fe8	                	STA     SYSTEM_VIA_T2C_L        ; one byte output time
.2049	a9 23		lda #$23				LDA     #>INTER_CHAR_DLY
.204b	8d e9 7f	sta $7fe9	                	STA     SYSTEM_VIA_T2C_H
.204e	68		pla					PLA
.204f	60		rts					RTS
.2050					PUT_SER
.2050	20 69 20	jsr $2069				JSR	PUTSER_RAW
.2053	b0 fb		bcs $2050				BCS	PUT_SER
.2055	60		rts					RTS
.2056					GET_SER
.2056	20 5c 20	jsr $205c				JSR	GETSER_RAW
.2059	b0 fb		bcs $2056				BCS	GET_SER
.205b	60		rts					RTS
.205c					GETSER_RAW
.205c	ad 81 7f	lda $7f81				LDA	ACIA_SSR
.205f	29 08		and #$08				AND	#RX_RDY
.2061	38		sec					SEC
.2062	f0 04		beq $2068				BEQ	GETSER_X1
.2064	ad 80 7f	lda $7f80				LDA	ACIA_SDR
.2067	18		clc					CLC			; C=0 means A holds new received character
.2068					GETSER_X1
.2068	60		rts					RTS
.2069					PUTSER_RAW
.2069	48		pha					PHA
.206a	20 76 20	jsr $2076				JSR	TXCHDLY
.206d	68		pla					PLA
.206e	8d 80 7f	sta $7f80				STA	ACIA_SDR
.2071	18		clc					CLC					; C=0 means output was successful
.2072	80 01		bra $2075				BRA	PSR_X2				; and return it
.2074					PSR_X1
.2074	68		pla					PLA			; retore
.2075					PSR_X2
.2075	60		rts					RTS
=$0940					TX_DLY_CYCLES = $0940						; Not tuned.  As it's temporary, optimum settings are unimportant.
.2076					TXCHDLY
.2076	5a		phy					PHY
.2077	a0 40 09	ldy #$0940				LDY	#TX_DLY_CYCLES		; FIXME: Very bad work-around until timers are up
.207a					DLY_Y
.207a	88		dey					DEY
.207b	ea		nop					NOP
.207c	ea		nop					NOP
.207d	ea		nop					NOP
.207e	d0 fa		bne $207a				BNE	DLY_Y
.2080	7a		ply					PLY
.2081	60		rts					RTS
.2082					MSG_FOXRAM
>2082	0d 0d					.text 	CR,CR
>2084	20 20 20 20 20 20 20 20			.text	"        I YAM RUNNING INDA RAM!",CR,LF
>208c	49 20 59 41 4d 20 52 55 4e 4e 49 4e 47 20 49 4e
>209c	44 41 20 52 41 4d 21 0d 0a
>20a5	20 20 20 20 20 20 20 20		 	.text	"        _,-=._              /|_/|",CR,LF
>20ad	5f 2c 2d 3d 2e 5f 20 20 20 20 20 20 20 20 20 20
>20bd	20 20 20 20 2f 7c 5f 2f 7c 0d 0a
>20c8	20 20 20 20 20 20 20 2a		 	.text	"       *-.}   `=._,.-=-._.,  @ @._,",CR,LF
>20d0	2d 2e 7d 20 20 20 60 3d 2e 5f 2c 2e 2d 3d 2d 2e
>20e0	5f 2e 2c 20 20 40 20 40 2e 5f 2c 0d 0a
>20ed	20 20 20 20 20 20 20 20		 	.text   "          `._ _,-.   )      _,.-'",CR,LF
>20f5	20 20 60 2e 5f 20 5f 2c 2d 2e 20 20 20 29 20 20
>2105	20 20 20 20 5f 2c 2e 2d 27 0d 0a
>2110	20 20 20 20 20 20 20 20		    .text   "             `    G.m-'^m'm'",CR,LF
>2118	20 20 20 20 20 60 20 20 20 20 47 2e 6d 2d 27 5e
>2128	6d 27 6d 27 0d 0a
>212e	20 20 20 20 20 20 20 20			.text   "          Foxy art by: Dmytro O. Redchuk",CR,LF
>2136	20 20 46 6f 78 79 20 61 72 74 20 62 79 3a 20 44
>2146	6d 79 74 72 6f 20 4f 2e 20 52 65 64 63 68 75 6b
>2156	0d 0a
>2158	20 43 54 52 4c 2d 43 20			.text   " CTRL-C to return to FuzzyMonitoster",CR,LF,CR,LF
>2160	74 6f 20 72 65 74 75 72 6e 20 74 6f 20 46 75 7a
>2170	7a 79 4d 6f 6e 69 74 6f 73 74 65 72 0d 0a 0d 0a
>2180	00				    .text	0

;******  End of listing
